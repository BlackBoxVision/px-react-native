(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[601],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2781:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i=["components"],c={},s={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Uso",description:"1. Crear un servicio",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/usage.md",sourceDirName:".",slug:"/usage",permalink:"/es/docs/usage",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/usage.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"React Native >= 0.64",permalink:"/es/docs/ios-setup/react-native-064"},next:{title:"Referencia de API",permalink:"/es/docs/api-reference"}},u=[{value:"1. Crear un servicio",id:"1-crear-un-servicio",children:[]},{value:"2. Inicializar el checkout de MP",id:"2-inicializar-el-checkout-de-mp",children:[]}],l={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"1-crear-un-servicio"},"1. Crear un servicio"),(0,o.kt)("p",null,"Vas a necesitar crear un servicio que permita obtener el ",(0,o.kt)("inlineCode",{parentName:"p"},"ID de preferencia")," de tu propia API (en este ejemplo vamos directo contra la API de MercadoPago por cuestiones de simplicidad):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// mercadopago-service.js\nimport Env from 'react-native-config';\n\n// You should create the preference server-side, not client-side \n// but we show client-side for the sake of simplicity\nexport const getPreferenceId = async (payer, ...items) => {\n  const response = await fetch(\n    `https://api.mercadopago.com/checkout/preferences?access_token=${Env.MP_ACCESS_TOKEN}`,\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        items,\n        payer: {\n          email: payer,\n        },\n      }),\n    }\n  );\n\n  const preference = await response.json();\n\n  return preference.id;\n};\n")),(0,o.kt)("h2",{id:"2-inicializar-el-checkout-de-mp"},"2. Inicializar el checkout de MP"),(0,o.kt)("p",null,"Vas a necesitar crear una funci\xf3n que se pase a un componente. Esta funci\xf3n va a ejecutar los siguientes pasos: "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Invocar la funci\xf3n que llame el servicio para obtener el ",(0,o.kt)("inlineCode",{parentName:"li"},"ID de preferencia"),"."),(0,o.kt)("li",{parentName:"ul"},"Inicializar el checkout con tu ",(0,o.kt)("inlineCode",{parentName:"li"},"llave p\xfablica")," y el ",(0,o.kt)("inlineCode",{parentName:"li"},"ID de preferencia"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import Env from 'react-native-config';\nimport React, { useState } from 'react';\nimport { StyleSheet, View, Text, TouchableOpacity, Alert } from 'react-native';\n\nimport MercadoPagoCheckout from '@blackbox-vision/react-native-mercadopago-px';\n\nimport * as MercadoPagoService from './mercadopago-service';\n\nimport styles from './styles';\n\nexport default function App() {\n  const [paymentResult, setPaymentResult] = useState(null);\n\n  const startCheckout = async () => {\n    try {\n      const preferenceId = await MercadoPagoService.getPreferenceId('payer@email.com', {\n        title: 'Dummy Item Title',\n        description: 'Dummy Item Description',\n        quantity: 1,\n        currency_id: 'ARS',\n        unit_price: 10.0,\n      });\n\n      const payment = await MercadoPagoCheckout.createPayment({\n        publicKey: Env.MP_PUBLIC_KEY,\n        preferenceId,\n      });\n\n      setPaymentResult(payment);\n    } catch (err) {\n      Alert.alert('Something went wrong', err.message);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={startCheckout}>\n        <Text style={styles.text}>Start Payment</Text>\n      </TouchableOpacity>\n      <Text style={styles.text}>Payment: {JSON.stringify(paymentResult)}</Text>\n    </View>\n  );\n}\n")))}p.isMDXComponent=!0}}]);